openapi: 3.0.1
info:
  description: 'This is a sample online shop for the Angular training. The product
    catalog may be accessed even without logging in (the login is just a mock endpoint).
    Users may have any of the three following roles: ''user'' (always), ''customer'',
    ''admin''.'
  title: Online Shop
  version: 0.0.1
servers:
- url: http://localhost:3000/
tags:
- description: Product operations
  name: products
- description: User operations
  name: users
- description: Order operations
  name: orders
paths:
  /products:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductHeader'
                type: array
          description: successful operation
      summary: Read all products in the catalogue
      tags:
      - products
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Product object to be added to the catalogue
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: successful operation
      summary: Add a new product to the catalogue
      tags:
      - products
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /products/{id}:
    delete:
      parameters:
      - description: The product ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: successful operation
        "404":
          content: {}
          description: product not found
      summary: Deletes a product from the catalogue
      tags:
      - products
      x-accepts: application/json
    get:
      parameters:
      - description: The product ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
          description: successful operation
        "404":
          content: {}
          description: product not found
      summary: Reads a product from the catalogue
      tags:
      - products
      x-accepts: '*/*'
    put:
      parameters:
      - description: The product ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Product object to be updated
        required: true
      responses:
        "204":
          content: {}
          description: successful operation
        "404":
          content: {}
          description: product not found
      summary: Updates a product from the catalogue
      tags:
      - products
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: User credentials
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
        "401":
          content: {}
          description: username or password is incorrect
      summary: Login to the online shop
      tags:
      - users
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: '*/*'
  /orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInput'
        description: Order details
        required: true
      responses:
        "201":
          content: {}
          description: successful operation
        "401":
          content: {}
          description: user or product not found
      summary: Create an order
      tags:
      - orders
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    Product:
      example:
        image: https://www.gstatic.com/webp/gallery3/1.sm.png
        price: 150
        name: Lorem
        description: Lorem ipsum
        id: 123
        category: Ipsum
      properties:
        id:
          example: 123
          format: int64
          type: integer
        name:
          example: Lorem
          type: string
        category:
          example: Ipsum
          type: string
        price:
          example: 150
          format: int64
          type: integer
        image:
          example: https://www.gstatic.com/webp/gallery3/1.sm.png
          format: uri
          type: string
        description:
          example: Lorem ipsum
          type: string
      type: object
    ProductHeader:
      example:
        price: 150
        name: Lorem
        id: 123
        category: Ipsum
      properties:
        id:
          example: 123
          format: int64
          type: integer
        name:
          example: Lorem
          type: string
        category:
          example: Ipsum
          type: string
        price:
          example: 150
          format: int64
          type: integer
      type: object
    Credentials:
      example:
        password: password
        username: doej
      properties:
        username:
          example: doej
          type: string
        password:
          example: password
          type: string
      type: object
    OrderInput:
      example:
        customer: doej
        products:
        - quantity: 1
          productId: 123
        - quantity: 1
          productId: 123
      properties:
        customer:
          example: doej
          type: string
        products:
          items:
            $ref: '#/components/schemas/OrderInput_products'
          type: array
      type: object
    User:
      example:
        roles:
        - user
        - customer
        - admin
        fullName: John Doe
        username: doej
      properties:
        username:
          example: doej
          type: string
        fullName:
          example: John Doe
          type: string
        roles:
          example:
          - user
          - customer
          - admin
          items:
            type: string
          type: array
      type: object
    OrderInput_products:
      example:
        quantity: 1
        productId: 123
      properties:
        productId:
          example: 123
          type: integer
        quantity:
          example: 1
          type: integer
      type: object
x-original-swagger-version: "2.0"

